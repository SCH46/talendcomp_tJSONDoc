<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.utils.NodeUtil
		java.util.List 
	" 
%>
<% 
   	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
   	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	String setup = ElementParameterParser.getValue(node, "__SETUP__");
	String jsonStringJava = "null";
	String jsonStringPlain = "null";
	boolean validate = "true".equals(ElementParameterParser.getValue(node, "__VALIDATE_INPUT__"));
	boolean usePlainTextForTest = "true".equals(ElementParameterParser.getValue(node, "__USE_PLAIN_TEXT_ONLY_AS_TEST__"));
	if ("READ_FROM_INPUT".equals(setup) || ("READ_FROM_INPUT_PLAIN_TEXT".equals(setup) && usePlainTextForTest)) {
    	boolean simplifiedLineBreaks = "true".equals(ElementParameterParser.getValue(node, "__SIMPLIFIED_LINE_BREAKS__"));
		jsonStringJava = ElementParameterParser.getValue(node, "__JSON_CONTENT__");
    	if (jsonStringJava  != null && jsonStringJava.trim().isEmpty() == false) {
    		if (simplifiedLineBreaks) {
	    		jsonStringJava = jsonStringJava.trim().replace("\r", "").replace("\n", "\\n\" +\n\"");
    		} else {
	    		jsonStringJava = jsonStringJava.trim().replace("\r", "");
    		}
    	} else {
    		jsonStringJava = "null";
    	}
	} else if ("READ_FROM_INPUT_PLAIN_TEXT".equals(setup)) {
		jsonStringPlain = ElementParameterParser.getValue(node, "__JSON_CONTENT_PLAIN_TEXT__");
    	if (jsonStringPlain  != null && jsonStringPlain.trim().isEmpty() == false) {
	    	jsonStringPlain = "\"" + jsonStringPlain.trim()
	    														.replace("\r", "")
	    														.replace("\\", "\\\\")
	    														.replace("\"", "\\\"")
	    														.replace("\n", "\\n\" +\n\"") + "\"";
    	} else {
    		jsonStringPlain = "null";
    	}
	}
	String file = ElementParameterParser.getValue(node, "__FILENAME__");
	if (file == null || file.trim().isEmpty()) {
    	 file = "null";
	}
	IConnection conn = null;
	List<? extends IConnection> inConns = NodeUtil.getIncomingConnections(node, IConnectionCategory.DATA);
	if (inConns.size() > 0) {
		conn = inConns.get(0);
	}
	String inputColumnName = null;
	if (conn != null) {
		inputColumnName = ElementParameterParser.getValue(node, "__JSON_INPUT_COLUMN__");
	}
    boolean log4jEnabled = "true".equals(org.talend.core.model.process.ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__")) && 
   							"JOBLET".equals(node.getComponent().getComponentType().toString()) == false;
%>
	globalMap.remove("<%=cid%>_CURRENT_NODE");
	globalMap.put("<%=cid%>_COUNT_ROOT_OBJECTS", 0);
   	try {
<%  if ("EMPTY_OBJECT".equals(setup)) { %>
		de.jlo.talendcomp.json.JsonDocument <%=cid%> = new de.jlo.talendcomp.json.JsonDocument(false); 
<%  } else if ("EMPTY_ARRAY".equals(setup)) { %>
		de.jlo.talendcomp.json.JsonDocument <%=cid%> = new de.jlo.talendcomp.json.JsonDocument(true); 
<%  } else if ("READ_FROM_INPUT".equals(setup) || "READ_FROM_INPUT_PLAIN_TEXT".equals(setup)) { %>
<%		if ("READ_FROM_INPUT_PLAIN_TEXT".equals(setup)) { %>
<%			if (usePlainTextForTest) { %>
		String jsonContentJava = <%=jsonStringJava%>;
		String jsonContentPlain = <%=jsonStringPlain%>;
		String jsonContent = null;
		if (jsonContentJava != null && jsonContentJava.trim().isEmpty() == false) {
			jsonContent = jsonContentJava;
		} else {
			jsonContent = jsonContentPlain;
		}
<%			} else { %>
		String jsonContent = <%=jsonStringPlain%>;
<%			} %>	
<%		} else { %>
		String jsonContent = <%=jsonStringJava%>;
<%		} %>	
		de.jlo.talendcomp.json.JsonDocument <%=cid%> = new de.jlo.talendcomp.json.JsonDocument(jsonContent); 
<%  } else if ("READ_FROM_FLOW".equals(setup)) { 
        if (inputColumnName != null) { %>
		de.jlo.talendcomp.json.JsonDocument <%=cid%> = new de.jlo.talendcomp.json.JsonDocument(<%=conn.getName()%>.<%=inputColumnName%>);
<%  	}
	} else { %>
		String filePath = <%=file%>;
		java.io.File jsonFile = null;
		if (filePath != null && filePath.trim().isEmpty() == false) {
			jsonFile = new java.io.File(filePath);
		}
		de.jlo.talendcomp.json.JsonDocument <%=cid%> = new de.jlo.talendcomp.json.JsonDocument(jsonFile); 
<%  } %>
		globalMap.put("<%=cid%>", <%=cid%>);
		globalMap.put("<%=cid%>_CURRENT_NODE", <%=cid%>.getRootNode());
		globalMap.put("<%=cid%>_CURRENT_PATH", "$");
		globalMap.put("<%=cid%>_COUNT_ROOT_OBJECTS", <%=cid%>.getCountRootObjects());
<%	if (validate) { %>
		String <%=cid%>_validationErrors = <%=cid%>.validate(jobName + ".<%=cid%>");
		if (<%=cid%>_validationErrors != null) {
			throw new Exception(<%=cid%>_validationErrors);
		}
<%	} %>	
	} catch (Exception e) {
<%	if (log4jEnabled) { %>
		log.error(currentComponent + ": " + e.getMessage(), e);
<%	} %>
   		globalMap.put("<%=cid%>_ERROR_MESSAGE", e.getMessage());
   		throw e;
	}
